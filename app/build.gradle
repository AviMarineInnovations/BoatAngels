apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def final yourApplicationId = 'in.avimarine.boatangels'
android.variantFilter { variant ->
    if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'dev') {
        variant.setIgnore(true)
    }
}
android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId = yourApplicationId
        //These are the values for the authorities and account types.
        //Reference them in the java files with e.g. BuildConfig.ACCOUNT_TYPE.
        buildConfigField "String", "ACCOUNT_TYPE", "\"${applicationId}.account\""
        buildConfigField "String", "AUTHORITY", "\"${applicationId}.provider\""
        //Reference them in .xml files.

        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        resConfigs "en", "iw"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "standard"
    productFlavors {
        dev {
            dimension "standard"
            applicationIdSuffix ".dev"
            //Reference them again so they get overwritten by the flavor.
            buildConfigField "String", "ACCOUNT_TYPE", "\"${applicationId}.account\""
            buildConfigField "String", "AUTHORITY", "\"${applicationId}.provider\""
        }
        stage {
            dimension "standard"
            applicationIdSuffix ".stage"
            //Reference them again so they get overwritten by the flavor.
            buildConfigField "String", "ACCOUNT_TYPE", "\"${applicationId}.account\""
            buildConfigField "String", "AUTHORITY", "\"${applicationId}.provider\""
        }
        production {
            dimension "standard"
            //Reference them again so they get overwritten by the flavor.
            buildConfigField "String", "ACCOUNT_TYPE", "\"${applicationId}.account\""
            buildConfigField "String", "AUTHORITY", "\"${applicationId}.provider\""
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation "com.android.support:design:27.0.2"
    implementation "com.android.support:cardview-v7:27.0.2"
    implementation "com.android.support:customtabs:27.0.2"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta5'
    implementation "com.google.firebase:firebase-core:11.8.0"
    implementation 'com.google.firebase:firebase-database:11.8.0'
    implementation 'com.google.firebase:firebase-auth:11.8.0'
    implementation 'com.google.firebase:firebase-crash:11.8.0'
    implementation 'com.google.firebase:firebase-storage:11.8.0'
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.android.support:support-vector-drawable:27.0.2'
    compile "com.google.android.gms:play-services-auth:11.8.0"
    compile 'com.google.firebase:firebase-firestore:11.8.0'
    implementation 'com.firebaseui:firebase-ui-auth:3.1.1'
    implementation 'com.firebaseui:firebase-ui-firestore:3.1.1'
    implementation 'com.firebaseui:firebase-ui-storage:3.1.1'
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'
    compile 'com.jakewharton:butterknife:8.8.1'
    compile 'com.hbb20:ccp:2.1.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    compile 'de.hdodenhof:circleimageview:2.2.0'
    compile 'com.github.pwittchen:weathericonview:1.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'org.jetbrains:annotations:15.0'
}
apply plugin: 'com.google.gms.google-services'